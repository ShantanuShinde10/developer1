name: SonarCloud Analysis (Self-Hosted Runner)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    runs-on: self-hosted  # Use self-hosted Windows runner

    steps:
      # Step 1: Setup SSH for Git (Bypass Self-Signed SSL Issue)
      - name: Setup SSH Key for Git
        run: |
          mkdir -p C:\Users\runner\.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > C:\Users\runner\.ssh\id_rsa
          chmod 600 C:\Users\runner\.ssh\id_rsa
          ssh-keyscan github.com >> C:\Users\runner\.ssh\known_hosts

      # Step 2: Checkout the Repository Using SSH (Avoid SSL Errors)
      - name: Checkout Code via SSH
        run: |
          git clone git@github.com:ShantanuShinde10/sonarscan.git .
      
      # Step 3: Set Up Java (Required for SonarScanner)
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 4: Install and Configure SonarScanner
      - name: Install SonarScanner
        run: |
          Invoke-WebRequest -Uri "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-windows.zip" -OutFile sonar-scanner.zip
          Expand-Archive -Path sonar-scanner.zip -DestinationPath C:\sonar-scanner
          echo "C:\sonar-scanner\sonar-scanner-4.7.0.2747-windows\bin" | Out-File -Append -FilePath $env:GITHUB_PATH

      # Step 5: Run SonarScanner
      - name: Run SonarScanner
        run: |
          sonar-scanner -Dsonar.organization="ShantanuShinde10" -Dsonar.projectKey="shantanushinde10" -Dsonar.sources=.

      # Optional: Cache SonarCloud Dependencies
      - name: Cache SonarCloud dependencies
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/sonar-project.properties') }}
          restore-keys: |
            ${{ runner.os }}-sonar-
