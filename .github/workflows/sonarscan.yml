name: SonarCloud Analysis
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ShantanuShinde10_sonarscan
            -Dsonar.organization=shantanushinde10
            -Dsonar.sources=.
            -Dsonar.host.url=https://sonarcloud.io
      - name: Upload SARIF to GitHub Security Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: path/snyk.sarif
          token: ${{ secrets.GITHUB_TOKEN }}
          wait-for-processing: true

      - name: Create issues for code scanning alerts
        if: success() # Only runs if previous steps succeed
        run: |
          # Fetch the open code scanning alerts from GitHub Security
          ALERTS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/code-scanning/alerts?state=open")

          # Print the raw JSON response for debugging purposes
          echo "Fetched code scanning alerts:"
          echo "$ALERTS" | jq .

          # Check if the response contains alerts
          ALERT_COUNT=$(echo "$ALERTS" | jq 'length')

          if [ "$ALERT_COUNT" -gt 0 ]; then
            echo "Code scanning alerts found. Creating issues..."

            # Loop through each alert
            echo "$ALERTS" | jq -c '.[]' | while read -r alert; do
              # Extract rule name and URL
              RULE_NAME=$(echo "$alert" | jq -r '.rule.name')  # Get the rule name
              ALERT_URL=$(echo "$alert" | jq -r '.html_url')    # Get the URL to the alert on GitHub

              ISSUE_TITLE="Fix code scanning alert - $RULE_NAME"
              ISSUE_BODY="Tracking issue for:\n- [ ] $ALERT_URL"

              # Create an issue using GitHub's API
              curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -d "{\"title\":\"$ISSUE_TITLE\", \"body\":\"$ISSUE_BODY\", \"labels\":[\"security\"]}" \
                https://api.github.com/repos/${{ github.repository }}/issues
            done
          else
            echo "No code scanning alerts found."
          fi
